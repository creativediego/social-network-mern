name: Build, Push to Docker Hub, and Deploy to EC2
on:
  push:
    branches: [staging]
jobs:
  build-and-push:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      # Build and push client Docker image
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build Docker image for client
        run: |
          make -f Makefile build-client-production DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}

      # - name: Build Docker image for server
      #   run: |
      #     make -f Makefile build-server-production

      - name: List docker images built
        run: docker image ls

      # Push client and server images to Docker Hub
      - name: Push client Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/social-app:client-production-latest

      # - name: Push server Docker image to Docker Hub
      #   run: docker push ${{ secrets.DOCKER_USERNAME }}/social-app:server

  # deploy-to-ec2:
  #   name: Deploy to EC2
  #   runs-on: ubuntu-latest
  #   needs: [build-and-push]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     # Configure AWS credentials for EC2 deployment
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: your-aws-region

  #     # Deploy to EC2 using Docker run command for both client and server
  #     - name: Deploy Client to EC2 using Docker run command
  #       run: |
  #         docker pull your-dockerhub-username/client-image-name:tag
  #         docker run -d -p 80:80 your-dockerhub-username/client-image-name:tag

  #     - name: Deploy Server to EC2 using Docker run command
  #       run: |
  #         docker pull your-dockerhub-username/server-image-name:tag
  #         docker run -d -p 3000:3000 your-dockerhub-username/server-image-name:tag
