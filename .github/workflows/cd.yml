name: CD Pipeline

on:
  workflow_run:
    workflows:
      - CI Pipeline
    types:
      - completed
      - success
jobs:
  deploy:
    runs-on: self-hosted
    env:
      APP_DIR: /home/${{ secrets.EC2_USER }}/app
    steps:
      - name: Clean existing app directory
        run: |
          rm -rf $APP_DIR
          mkdir $APP_DIR

      - name: Create temporary env file to store github secrets
        run: |
          touch $APP_DIR/temp_env_file.env
          printf "ENV=production\n\
          DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}\n\
          API_PORT=4000\n\
          API_MONGO_URI=${{ secrets.MONGO_URI }}\n\
          API_CLIENT_URL=http://https://buzzcentral.app\n\
          API_FIREBASE_CREDENTIALS=${{ secrets.API_FIREBASE_CREDENTIALS }}\n\
          REACT_APP_CLIENT_URL=http://https://buzzcentral.app\n\
          REACT_APP_API_URL=http://https://buzzcentral.app/api/v1\n\
          REACT_APP_SOCKET_URL=http://https://buzzcentral.app:4000
          REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}\n\
          REACT_APP_FIREBASE_DOMAIN=${{ secrets.REACT_APP_FIREBASE_DOMAIN }}\n\
          REACT_APP_FIREBASE_KEY=${{ secrets.REACT_APP_FIREBASE_KEY }}\n\
          REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}\n\
          REACT_APP_FIREBASE_MESSAGING_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_ID }}\n\
          REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}\n\
          REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" > $APP_DIR/temp_env_file.env
          chmod 600 $APP_DIR/temp_env_file.env  # Adjust permissions to restrict access
        # Prevent the file from being logged
        env:
          ACTIONS_STEP_DEBUG: false

      - name: Create temporary TSL certificate and key files
        run: |
          touch  $APP_DIR/temp_tls_cert.pem  $APP_DIR/temp_tls_key.pem
          printf "%s" "${{ secrets.TLS_CERT }}" > $APP_DIR/temp_tls_cert.pem
          printf "%s" "${{ secrets.TLS_KEY }}" > $APP_DIR/temp_tls_key.pem
          chmod 600 $APP_DIR/temp_tls_cert.pem $APP_DIR/temp_tls_key.pem
        # Prevent the file from being logged
        env:
          ACTIONS_STEP_DEBUG: false

      - name: Pull client Docker image from Docker Hub
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/social-app:client-production-latest

      - name: Pull server Docker image from Docker Hub
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/social-app:client-production-latest

      - name: Stop and remove old client container
        run: |
          sudo docker stop client-production-latest || true
          sudo docker rm client-production-latest || true

      - name: Stop and remove old server container
        run: |
          sudo docker stop server-production-latest || true
          sudo docker rm server-production-latest || true

      - name: Checkout repo
        uses: actions/checkout@v3

      # Move the checked-out repository to the desired directory
      - name: Move repository to target directory
        run: cp -r $GITHUB_WORKSPACE/* $APP_DIR

      - name: Run client and server container with Makefile command
        run: |
          make run-production ENV_FILE=temp_env_file.env TLS_CERT_FILE=$APP_DIR/temp_tls_cert.pem TLS_KEY_FILE=$APP_DIR/temp_tls_key.pem DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
        working-directory: /home/${{ secrets.EC2_USER }}/app

      - name: Cleanup temporary env files
        run: |
          rm temp_env_file.env
          rm temp_tls_cert.pem
          rm temp_tls_key.pem
        working-directory: /home/${{ secrets.EC2_USER }}/app
        # Prevent logging of the deletion command
        env:
          ACTIONS_STEP_DEBUG: false
